const ethers = require("ethers")
const Wallet = ethers.Wallet
const providers = ethers.providers
const path = require("path")
const fs = require("fs")
const assert = require("chai").assert

const deploy = require("../scripts/deploy.js")

let ringVerify
let provider
let signer

// mocha verify_test.js --timeout 20000
describe("ring verify", () => {
	before(async() => {
		ringVerify = await deploy.deployRingVerify()
		provider = ringVerify.provider
		signer = ringVerify.signer
	})

	it("should verify correctly formed ring size of 12", async() => {
		let data = "0x000000000000000cc1099d20b4f0982bae795735b02dd145b1c51477902941640fbd7a044bea499cde6717b9c5a35c443e474170d2407bf8e660c1c59f3c1756ff2d03706a2725dbb9d1358b5d7c82d8bf8fe042112984561ac093d611da4047c1281ee659d86baa8d1dd08156219f75124c6dc816983d6886e67bd8a2f79eea3df09af51abc77f25efd96a1525f404bc69738b788b8f0b82188af1222aeb5987f4db21472a45c1581be1cf21ceecd377ca707446acc60b674b7ba3877280726a51313d68326fd76839f18376ee3c2d1c7f91175d49ba5f01213d3fe0899fcfe2627f275671bb5eaa5fbc2b8663946628f791c93566258988939b0ae223ed5762ed13ba59beff9a075d5827d4457e1af2025900a176b50ee66792625eb4656871483a8115a795338cfe7e562d90890ec9244b869244cce0fb523ad2ef3d1a1d4100ed345643feed1244e7eb62372a24912ede3f0e557c44351586b1d95b58ed1af3be94453b5013d2f69a74dca0d475fbdd2268dbeb2fbeb27c78dfc3bee514bd37942a8a9755bcf594ae751fd30b7418bc0afec6f176d777c5e79bcddc5ef3eb38420f00f918662fcf94379438bdb1aa65e64eb032690ef3c71bbafc826363c0d7c05d789157f7a04f05190548827f8cbf2a8c80db9f11bffa9014a6c4f7377622592584407b298b8a17cd6f91f5fc56484bc8d1f2c82691fb0efe981902685d1f6db1297a2a54d3029d671a5a5f686c699c53f0499102210b4367acf99c38f43fcb73db2b03ce3fcee2bc012963f5dbe062950dbd1483718fb6a0a80cedc060eee4f732e12e610ca23c285bb78ae5e8ce1cf89ded94d6bbfa2a3889afe56a76e508a22cb7e3515e86298632dcf2b7e8d92b8ad78cebb54947102044d8f7d50c1b7c3320087a307e609713c029de3caf1b6087922810ccbc95a9de3d97f9ec93512c6258160cf93a25954e82b636b8d6cd34ba4f9e57871762e3cd5e3839debc97e89129bd80ab37e97d8b6cef1fea8ddca4c8f5283532f0c75a916b660a9a97a9b64671323cf86cdb9c9f806ac16bb850efb2f1725a4c87b66c4d3e775877889d52ee4426ddf8f883e1450d9c3068eac73f7e9f136521db8ce351fba4a1739a3cbeb6800172621c862d8ef12104586bc5fd0c9ad23c5f23da32ce99c4daac4112369f84412e0691c194b1e4faae8ba8c3655668cc31e3cb907f5b2e3b4f16eae0df746647da45326795b87f8d4ed450a358cfa5400bb882cdc94ed3216c9109919efeede412e26d7304f17f6f712cae776ecf47be0b0860da428281d2697a88387dd887da75921fb1a7752d28bbfcb18218a2e460091b1e5f6919c6d3058ded9338b9d6d1e09c071f6a1b8934f68606ff02c10d0d1bb517a60adef550b71073bec3e21caef7d3a660fb540b7eceb6318b972d8cfabd1a5400ecdb92ba184bd28bfdc18e71171e7fb9c8511c1736df8b563a7f7fa22564696f828265f5b4fa16aee3c54cf37a371f542def263bcba620e5369b23c16e5b3bdfb2fc6ca4c001c31133639bc615f510a3a29691526ee1b8c1041677e98ec25e3101ee3ddfcc4a1939f22cc39b39929251f944bf4a95db59b88cf2d70762944ee45c0bc2ec51e9d9b4072e95904581696565a70f20ed05899214a797c71d29edd09d82cff75858f2dea08f51b2e20669e23f9d0cc645452c67c13ea0a0e2db6fe3fd4a4d5a9b0db1420aca53a73c32e187be7294d837e3557a5d6827d87a33dc609a339e82be398d2fdd894e7a3e85499ee5daf57acce886b9e254c27d46bddc7ede6c443d5f6f56a3ba715b758b6ac"
		let tx = await ringVerify.verify(data)
		await provider.waitForTransaction(tx.hash)
		let receipt = await provider.getTransactionReceipt(tx.hash)
		assert(receipt.logs.length > 0)
		assert(parseInt(receipt.logs[0].topics[1].slice(2)) === 1)
	})

	it("should verify correctly formed ring size of 17", async() => {
		let data = "0x0000000000000011c1099d20b4f0982bae795735b02dd145b1c51477902941640fbd7a044bea499ca5cb307d500d8c626e17492b99bcde15949354c32f72f66350d9a59504e33210dc21d5b7080f17c5aa2c1a1a386f5289412968356874340f564b9fff8b418251846897be8998fd309fc0b2e6cde6bc3b5e9336c38c49f9554f96b9154066253575a3337526244f38e98d24c102a609383af984d67d914639e05377e8bb2972ae9c1ee2387dee39999a614ae249016e7316531078b2f5c3a9bc6385d447221efdd6f6a2597df7a99d77bfe275c9487651a1a6ac385aa964c3e39899fb68c1ed0b96e671bb773ec58106f5bf2fcb68510c72c34c3bcbbaa7a35e1fd6c1908a5c2642e2b8be7985f6f69e6a1c35aaf62aacc84c62365807e2bddc47695657fb9e41071a5c7513049c4018c078c5b59820c9c9372b076373155091ece3e462daa455ac98e3b1e07fc1ff4f1f4f9927e2ceef5a3cee98e0f96bd714f3232b47a9b171775e6b4413a1ac11c21f9e79ef0ced92555a2bed04cb04c9217b5c968c1a97e5e2f85031070451b144ddee68f64d8349dca0238bce735aaf051a7bceca7cee97ea57e5f6559e8c7cb07c0eb347dd2cb0c44f0d5ea6e113c3e72d51148eebadfc15d78e37c8d889bccc28fbf95b8c7d7f5280a54914ef1b01ede2aab8f95dc135cc7673d2844703ad3ab14819cd3f8865f201d6c8d4ba7d18943a242291fb51bc2ea74e179195e882c59e119fe8f6885ca3177e8da5ea7b86f2850f4b840d931832863ba58f60d9a0ab180a6ec6ae7aab84e8c79231cd94bc4395f226d98e34a9adbae4025179e6ee53a99e9504ebe7ee458d16c5a104078c6391a584032327bba2694bbe10f34b0d46f1c18190c7da7ba49255fd0cb008d7fd17a55fd08a52dbd4e63ec6963141900af0b677184a739b483455cde32dcd798652b17ffe0901d2e51c5e1f196576d898d5a107237b314a5660fbf5d9c60917896af36ffc35dcf303f8f36738821b2fc64858b603594fc2fc5a6929788d424a7860f0e170864c32f17046c9c736685c9cf56a01ffac3dce0b09ddfcd7d1bde975eaf003b8d8625f883e1450d9c3068eac73f7e9f136521db8ce351fba4a1739a3cbeb6800172621c862d8ef12104586bc5fd0c9ad23c5f23da32ce99c4daac4112369f84412e0690c5629de6212593df7c49492612cc1289b71604b08b462c9ab1fd5fb53a06a70146b4034f6edd043815c19c322b487a4616568d2747de4976e647ff57526c671cef907810778f6b9bd6d720fd4cd25e5861444eb8df0067579c28ed31054fff0acccfccb38520724dafaac7d9850dca0a86cc779453d8ab445eb993ede3471edf3be36b0b01f81b12e956763c89ac66ab6cb437790feab20ae23cd46d3601d2ec6bcdb6107470562a0b478d80085e5b708bdfaf5418936d5548ddd859dde09f5277bda0ecd39660c334188277537a16f7ab8772804ce3db91a67e4906fab8ac82e1f71c827bf22cac779993052f6009438e4f65c03ccf881c330e2070206bd25e5e19830dd170d70098b07f8b5e3dc075486d3cf5e704035167e4401938f65de435edea9d68066adb1966102be292ff08e554641893e70e7d9dbc18479c0ab975f74f45e36a0caa42631b46253bd32e249411d19e65f6d7b1ea2a301b287e7dcd68f32fab2a2d1311ad55fe490566790e13f6a813d668adbb8f2ab60c767bd91db7d6147b5ea00e089ec0ec94acbc0f3db8e5192fed1bb7bfddd57de4cc897776ff43af850e7b897c8032c9a825715205fafed68bdbaf92db9c1f914bb1b81b62682ddf37c37645857a59a86753ffb424d53dac5bd4c2a92c9fcc51fe128e2304c8c76058202888651436e54d0f6cbf5a708488f2af79a895fca6319653d428b0237b574b6f958bf16448a5271a2b8bdb18742c42797c5c68eda131852900fb7559de0504200b9596cae8bea74fd24ac4c572f8fe4cb3010a617aed8be26169327a4a2028fba0504bc9cc8fff28b1aac6df6391e94e2b05811be909488e5811b3654d4efc50bec0860cc9eaf781b9408f7c7ef787fb7a83cf054dcfb27bbef3226fef454e9dec80bf80339e818a1ad51b0083ed4d3112e2e3313712cf5a57f083fadda39c2c84024778a535abc4115eb2011d87f284e34566c1dba0f6d94fcd6cfd6b4b80d68e8426802a592aacac0e6791b8fc3079caf4e5aa5c48bb3f2d42d9282f5eb1b224983fbc8a84060dc6cf254bcf7f5a8e764f9896f5989316d273020fb29880787484879f1ea3eed5300889efedbb76af9b1fa11931e6653424b8e73fd05273e031f33aaba781273343748571592f2c68aabb198db668e490083363327044a2eb88bad2f827824c20b87fd33d3a5e9b8c7ea99aa78a0eaa8e64d9c187be7294d837e3557a5d6827d87a33dc609a339e82be398d2fdd894e7a3e85499ee5daf57acce886b9e254c27d46bddc7ede6c443d5f6f56a3ba715b758b6ac"
		let tx = await ringVerify.verify(data)
		await provider.waitForTransaction(tx.hash)
		let receipt = await provider.getTransactionReceipt(tx.hash)
		assert(receipt.logs.length > 0)
		assert(parseInt(receipt.logs[0].topics[1].slice(2)) === 1)
	})

	it("should not verify incorrectly formed ring", async() => {
		let data = "0x000000000000000cc1099d20b4f0982bae795755b02dd145b1c51477902941640fbd7a044bea499cde6717b9c5a35c443e474170d2407bf8e660c1c59f3c1756ff2d03706a2725dbb9d1358b5d7c82d8bf8fe042112984561ac093d611da4047c1281ee659d86baa8d1dd08156219f75124c6dc816983d6886e67bd8a2f79eea3df09af51abc77f25efd96a1525f404bc69738b788b8f0b82188af1222aeb5987f4db21472a45c1581be1cf21ceecd377ca707446acc60b674b7ba3877280726a51313d68326fd76839f18376ee3c2d1c7f91175d49ba5f01213d3fe0899fcfe2627f275671bb5eaa5fbc2b8663946628f791c93566258988939b0ae223ed5762ed13ba59beff9a075d5827d4457e1af2025900a176b50ee66792625eb4656871483a8115a795338cfe7e562d90890ec9244b869244cce0fb523ad2ef3d1a1d4100ed345643feed1244e7eb62372a24912ede3f0e557c44351586b1d95b58ed1af3be94453b5013d2f69a74dca0d475fbdd2268dbeb2fbeb27c78dfc3bee514bd37942a8a9755bcf594ae751fd30b7418bc0afec6f176d777c5e79bcddc5ef3eb38420f00f918662fcf94379438bdb1aa65e64eb032690ef3c71bbafc826363c0d7c05d789157f7a04f05190548827f8cbf2a8c80db9f11bffa9014a6c4f7377622592584407b298b8a17cd6f91f5fc56484bc8d1f2c82691fb0efe981902685d1f6db1297a2a54d3029d671a5a5f686c699c53f0499102210b4367acf99c38f43fcb73db2b03ce3fcee2bc012963f5dbe062950dbd1483718fb6a0a80cedc060eee4f732e12e610ca23c285bb78ae5e8ce1cf89ded94d6bbfa2a3889afe56a76e508a22cb7e3515e86298632dcf2b7e8d92b8ad78cebb54947102044d8f7d50c1b7c3320087a307e609713c029de3caf1b6087922810ccbc95a9de3d97f9ec93512c6258160cf93a25954e82b636b8d6cd34ba4f9e57871762e3cd5e3839debc97e89129bd80ab37e97d8b6cef1fea8ddca4c8f5283532f0c75a916b660a9a97a9b64671323cf86cdb9c9f806ac16bb850efb2f1725a4c87b66c4d3e775877889d52ee4426ddf8f883e1450d9c3068eac73f7e9f136521db8ce351fba4a1739a3cbeb6800172621c862d8ef12104586bc5fd0c9ad23c5f23da32ce99c4daac4112369f84412e0691c194b1e4faae8ba8c3655668cc31e3cb907f5b2e3b4f16eae0df746647da45326795b87f8d4ed450a358cfa5400bb882cdc94ed3216c9109919efeede412e26d7304f17f6f712cae776ecf47be0b0860da428281d2697a88387dd887da75921fb1a7752d28bbfcb18218a2e460091b1e5f6919c6d3058ded9338b9d6d1e09c071f6a1b8934f68606ff02c10d0d1bb517a60adef550b71073bec3e21caef7d3a660fb540b7eceb6318b972d8cfabd1a5400ecdb92ba184bd28bfdc18e71171e7fb9c8511c1736df8b563a7f7fa22564696f828265f5b4fa16aee3c54cf37a371f542def263bcba620e5369b23c16e5b3bdfb2fc6ca4c001c31133639bc615f510a3a29691526ee1b8c1041677e98ec25e3101ee3ddfcc4a1939f22cc39b39929251f944bf4a95db59b88cf2d70762944ee45c0bc2ec51e9d9b4072e95904581696565a70f20ed05899214a797c71d29edd09d82cff75858f2dea08f51b2e20669e23f9d0cc645452c67c13ea0a0e2db6fe3fd4a4d5a9b0db1420aca53a73c32e187be7294d837e3557a5d6827d87a33dc609a339e82be398d2fdd894e7a3e85499ee5daf57acce886b9e254c27d46bddc7ede6c443d5f6f56a3ba715b758b6ac"
		let tx = await ringVerify.verify(data)
		await provider.waitForTransaction(tx.hash)
		let receipt = await provider.getTransactionReceipt(tx.hash)
		assert(receipt.logs.length > 0)
		assert(parseInt(receipt.logs[0].topics[1].slice(2)) === 0)
	})
}).timeout(20000)